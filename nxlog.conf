## This is a sample configuration file. See the nxlog reference manual about the
## configuration options. It should be installed locally and is also available
## online at http://nxlog.org/nxlog-docs/en/nxlog-reference-manual.html

## Please set the ROOT to the folder your nxlog was installed into,
## otherwise it will not start.

#define ROOT C:\Program Files\nxlog
define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules  
CacheDir %ROOT%\data  
Pidfile %ROOT%\data\nxlog.pid  
SpoolDir %ROOT%\data  
LogFile %ROOT%\data\nxlog.log

 
<Extension syslog>  
    Module      xm_syslog
</Extension>

#This doesnt really work 100%, but it works enough for graylog
<Extension multiline>
	Module	xm_multiline
	HeaderLine /,+,.*$/
	EndLine /,-,,/
</Extension>

#Complete Log transaction broken into chunks for graylog usage(by default it will take 1 line as 1 log, which isnt right)
<Input in_metric>  
   Module     im_file
   File       'C:\Program Files\Microsoft\Exchange Server\V14\TransportRoles\Logs\ProtocolLog\SmtpReceive\RECV2016*******.LOG'
   SavePos    TRUE
   InputType  multiline
</Input>

<Output out_metric>  
    Module  om_file
    File        "logs\metriclogs.txt"
</Output>

<Route metric>  
    Path      in_metric => out_metric
</Route>

#Get all lines with ehlo/helo lines
<Input in_test>  
   Module     im_file
   File       'C:\Program Files\Microsoft\Exchange Server\V14\TransportRoles\Logs\ProtocolLog\SmtpReceive\RECV2016*******.LOG'
   SavePos    TRUE
   Exec       if $raw_event !~ /\b(ehlo|helo)/i drop();
</Input>

<Output out_test>  
    Module    om_tcp
    Host      SERVERIP
    Port      PORT
    Exec      to_syslog_bsd();
</Output>

<Output out_test2>  
    Module  om_file
    File  "completelog.txt"
</Output>

<Route test>  
    Path      in_test => out_test,out_test2
</Route>

#Log used for importing to firewall, add exclusions, drop anything that has TLD
<Input in_notld>  
   Module     im_file
   File       'C:\Program Files (x86)\nxlog\data\completelog.txt'
   SavePos    TRUE
   Exec       if $raw_event =~ /^(?:[^,]*\,){7}(ehlo|helo).*\./i drop();
</Input>

<Output out_notld>
    Module  om_file
    File  "notld.txt"
    Exec if $raw_event =~ /(ADD EXCLUSIONS TO DROP HERE, HOST/IP)/ drop();
</Output>

<Route test>  
    Path      in_notld => out_notld
</Route>

#MessageTracking Logs
<Input in_exchange>  
   Module     im_file
   File       'C:\Program Files\Microsoft\Exchange Server\V14\TransportRoles\Logs\MessageTracking\MSGTRK????????-1.LOG'
   SavePos    TRUE
   Exec       if $raw_event =~ /HealthMailbox/ drop();
   Exec       if $raw_event =~ /^#/ drop();
</Input>

<Output out_exchange>  
    Module    om_tcp
    Host      SERVERIP
    Port      PORT
    Exec      $SyslogFacilityValue = 2;
    Exec      $SourceName = 'exchange_msgtrk_log';
    Exec      to_syslog_bsd();
</Output>

<Route exchange>  
    Path      in_exchange => out_exchange
</Route>

#Agent Logs
<Input in_exchange2>  
   Module     im_file
   File       'C:\Program Files\Microsoft\Exchange Server\V14\TransportRoles\Logs\AgentLog\AgentLog????????-1.LOG'
   SavePos    TRUE
   Exec       if $raw_event =~ /HealthMailbox/ drop();
   Exec       if $raw_event =~ /^#/ drop();
</Input>

<Output out_exchange2>  
    Module    om_tcp
    Host      SERVERIP
    Port      PORT
    Exec      $SyslogFacilityValue = 2;
    Exec      $SourceName = 'exchange_agent_log';
    Exec      to_syslog_bsd();
</Output>

<Route exchange2>  
    Path      in_exchange2 => out_exchange2
</Route>
